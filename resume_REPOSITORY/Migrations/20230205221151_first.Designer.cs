// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using resume_REPOSITORY;

#nullable disable

namespace resumeREPOSITORY.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230205221151_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("resume_MODELS.DTO.Awards_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Root_DTOId")
                        .HasColumnType("int");

                    b.Property<string>("awarder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Root_DTOId");

                    b.ToTable("awards");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Basics_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("locationId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("locationId");

                    b.ToTable("basics");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Education_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Root_DTOId")
                        .HasColumnType("int");

                    b.Property<string>("endDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("institution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Root_DTOId");

                    b.ToTable("educations");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Headings_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("awards")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("education")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projects")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("skills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("work")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("headings");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Highlight_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Work_DTOId")
                        .HasColumnType("int");

                    b.Property<string>("highlight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Work_DTOId");

                    b.ToTable("highlights");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Keyword_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Projects_DTOId")
                        .HasColumnType("int");

                    b.Property<int?>("Skills_DTOId")
                        .HasColumnType("int");

                    b.Property<string>("keyword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Projects_DTOId");

                    b.HasIndex("Skills_DTOId");

                    b.ToTable("keywords");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Location_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("location");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Projects_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Root_DTOId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Root_DTOId");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Root_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("basicsId")
                        .HasColumnType("int");

                    b.Property<int>("headingsId")
                        .HasColumnType("int");

                    b.Property<int>("selectedTemplate")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("basicsId");

                    b.HasIndex("headingsId");

                    b.ToTable("roots");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Section_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Root_DTOId")
                        .HasColumnType("int");

                    b.Property<string>("section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Root_DTOId");

                    b.ToTable("sections");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Skills_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Root_DTOId")
                        .HasColumnType("int");

                    b.Property<string>("level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Root_DTOId");

                    b.ToTable("skills");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Work_DTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Root_DTOId")
                        .HasColumnType("int");

                    b.Property<string>("company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("endDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("startDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Root_DTOId");

                    b.ToTable("work");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Awards_DTO", b =>
                {
                    b.HasOne("resume_MODELS.DTO.Root_DTO", null)
                        .WithMany("awards")
                        .HasForeignKey("Root_DTOId");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Basics_DTO", b =>
                {
                    b.HasOne("resume_MODELS.DTO.Location_DTO", "location")
                        .WithMany()
                        .HasForeignKey("locationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("location");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Education_DTO", b =>
                {
                    b.HasOne("resume_MODELS.DTO.Root_DTO", null)
                        .WithMany("education")
                        .HasForeignKey("Root_DTOId");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Highlight_DTO", b =>
                {
                    b.HasOne("resume_MODELS.DTO.Work_DTO", null)
                        .WithMany("highlights")
                        .HasForeignKey("Work_DTOId");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Keyword_DTO", b =>
                {
                    b.HasOne("resume_MODELS.DTO.Projects_DTO", null)
                        .WithMany("keywords")
                        .HasForeignKey("Projects_DTOId");

                    b.HasOne("resume_MODELS.DTO.Skills_DTO", null)
                        .WithMany("keywords")
                        .HasForeignKey("Skills_DTOId");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Projects_DTO", b =>
                {
                    b.HasOne("resume_MODELS.DTO.Root_DTO", null)
                        .WithMany("projects")
                        .HasForeignKey("Root_DTOId");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Root_DTO", b =>
                {
                    b.HasOne("resume_MODELS.DTO.Basics_DTO", "basics")
                        .WithMany()
                        .HasForeignKey("basicsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("resume_MODELS.DTO.Headings_DTO", "headings")
                        .WithMany()
                        .HasForeignKey("headingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("basics");

                    b.Navigation("headings");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Section_DTO", b =>
                {
                    b.HasOne("resume_MODELS.DTO.Root_DTO", null)
                        .WithMany("sections")
                        .HasForeignKey("Root_DTOId");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Skills_DTO", b =>
                {
                    b.HasOne("resume_MODELS.DTO.Root_DTO", null)
                        .WithMany("skills")
                        .HasForeignKey("Root_DTOId");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Work_DTO", b =>
                {
                    b.HasOne("resume_MODELS.DTO.Root_DTO", null)
                        .WithMany("work")
                        .HasForeignKey("Root_DTOId");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Projects_DTO", b =>
                {
                    b.Navigation("keywords");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Root_DTO", b =>
                {
                    b.Navigation("awards");

                    b.Navigation("education");

                    b.Navigation("projects");

                    b.Navigation("sections");

                    b.Navigation("skills");

                    b.Navigation("work");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Skills_DTO", b =>
                {
                    b.Navigation("keywords");
                });

            modelBuilder.Entity("resume_MODELS.DTO.Work_DTO", b =>
                {
                    b.Navigation("highlights");
                });
#pragma warning restore 612, 618
        }
    }
}
